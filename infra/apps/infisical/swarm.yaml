version: "3.8"
services:
  infisical-frontend:
    image: infisical/frontend
    # env_file: ${SERVICE_ENV_FILE?SERVICE_ENV_FILE not set}
    environment:
      INFISICAL_TELEMETRY_ENABLED: ${INFISICAL_TELEMETRY_ENABLED:-false}
    depends_on:
      - infisical-backend
    networks:
      - infisical
      - edge
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
      labels: 
        - "traefik.enable=true"
        - "traefik.http.routers.infisical-frontend.entrypoints=https"
        - "traefik.http.routers.infisical-frontend.rule=Host(`${INFISICAL_PROXY_HOST?INFISICAL_PROXY_HOST not set}`)"
        - "traefik.http.routers.infisical-frontend.service=infisical-frontend"
        - "traefik.http.services.infisical-frontend.loadbalancer.server.port=3000"
        # - "traefik.http.routers.infisical-frontend.middlewares=infisical-frontend-stripprefix"
        # - "traefik.http.middlewares.infisical-frontend-stripprefix.stripprefix.prefixes=/infisical"
  infisical-backend:
    image: infisical/backend    
    # secrets:
    #   - INFISICAL_ENCRYPTION_KEY
    #   - INFISICAL_JWT_SIGNUP_SECRET
    #   - INFISICAL_JWT_REFRESH_SECRET
    #   - INFISICAL_JWT_AUTH_SECRET
    #   - INFISICAL_JWT_SERVICE_SECRET
    #   - INFISICAL_JWT_PROVIDER_AUTH_SECRET
    # env_file: ${SERVICE_ENV_FILE?SERVICE_ENV_FILE not set}
    environment:
      NODE_ENV: production
      ENCRYPTION_KEY: ${INFISICAL_ENCRYPTION_KEY?INFISICAL_ENCRYPTION_KEY not set}
      JWT_SIGNUP_SECRET: ${INFISICAL_JWT_SIGNUP_SECRET?INFISICAL_JWT_SIGNUP_SECRET not set}
      JWT_REFRESH_SECRET: ${INFISICAL_JWT_REFRESH_SECRET?INFISICAL_JWT_REFRESH_SECRET not set}
      JWT_AUTH_SECRET: ${INFISICAL_JWT_REFRESH_SECRET?INFISICAL_JWT_REFRESH_SECRET not set}
      JWT_SERVICE_SECRET: ${INFISICAL_JWT_REFRESH_SECRET?INFISICAL_JWT_REFRESH_SECRET not set}
      JWT_PROVIDER_AUTH_SECRET: ${INFISICAL_JWT_REFRESH_SECRET?INFISICAL_JWT_REFRESH_SECRET not set}
      MONGO_URL: mongodb://${INFISICAL_MONGO_USERNAME}:${INFISICAL_MONGO_PASSWORD}@${INFISICAL_MONGO_HOST}:${INFISICAL_MONGO_PORT}/?authSource=${INFISICAL_MONGO_DATABASE}
      REDIS_URL: redis://infisical-redis:6379
      SITE_URL: ${INFISICAL_SITE_URL:-http://localhost:8080}
    depends_on:
      - infisical-mongo
      - infisical-redis
    networks:
      - infisical
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
  infisical-mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${INFISICAL_MONGO_ROOT_USERNAME?INFISICAL_MONGO_USERNAME not set}
      - MONGO_INITDB_ROOT_PASSWORD=${INFISICAL_MONGO_ROOT_PASSWORD?INFISICAL_MONGO_PASSWORD not set}
      - MONGO_INITDB_DATABASE=${INFISICAL_MONGO_DATABASE?INFISICAL_MONGO_DATABASE not set}
      - MONGO_INITDB_USERNAME=${INFISICAL_MONGO_USERNAME?INFISICAL_MONGO_USERNAME not set}
      - MONGO_INITDB_PASSWORD=${INFISICAL_MONGO_PASSWORD?INFISICAL_MONGO_PASSWORD not set}
    # volumes:
    #   - infisical_mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ping:1})", "-u", "${INFISICAL_MONGO_USERNAME}", "-p", "${INFISICAL_MONGO_PASSWORD}", "--authenticationDatabase", "${INFISICAL_MONGO_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - infisical
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
  infisical-redis:
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes    
    networks:
      - infisical
    # volumes:
    #   - infisical_redis_data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
# volumes:
#   infisical_redis_data:
#   infisical_mongo-data:

# secrets:
#   INFISICAL_ENCRYPTION_KEY:
#     external: true
#   INFISICAL_JWT_SIGNUP_SECRET: 
#     external: true
#   INFISICAL_JWT_REFRESH_SECRET: 
#     external: true
#   INFISICAL_JWT_AUTH_SECRET: 
#     external: true
#   INFISICAL_JWT_SERVICE_SECRET: 
#     external: true
#   INFISICAL_JWT_PROVIDER_AUTH_SECRET: 
#     external: true

networks:
  infisical:
    name: ${TENANT_NAME?Tenanat network name not set}_infisical
  tenant:
    name: ${TENANT_NAME?Tenanat network name not set}_tenant
    external: true
  edge:
    name: ${EDGE_NETWORK_NAME?EDGE_NETWORK_NAME not set}
    external: true